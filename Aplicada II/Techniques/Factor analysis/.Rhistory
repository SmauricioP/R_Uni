library("lattice")
library("FactoMineR")
library("psych")
library("nFactors")
data = Ingresantes[,c(2:10)]
cmdat=cor(data)
summary(data) #Some descriptives
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
print(KMO(cmdat), digits = 4)
#Number of factors to extract
ev=eigen(cmdat)
nS = nScree (x=ev$values)
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
#Extracting components
pcdat = principal(data, nfactors = 3, rotate ="varimax" , scores = TRUE)
names(pcdat)
round(pcdat$communality, 3) #Shows communalities
pcdat$loadings #Shows rotated component matrix
round(pcdat$scores[c(1:15),],4) #Shows factor scores
library(haven)
Ingresantes <- read_sav("~/SPSS/Factorial/Ingresantes.sav")
View(Ingresantes)
library("lattice")
library("FactoMineR")
library("psych")
library("nFactors")
data = Ingresantes[,c(2:10)]
cmdat=cor(data)
summary(data) #Some descriptives
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
print(KMO(cmdat), digits = 4)
#Number of factors to extract
ev=eigen(cmdat)
nS = nScree (x=ev$values)
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
#Extracting components
pcdat = principal(data, nfactors = 3, rotate ="varimax" , scores = TRUE)
names(pcdat)
round(pcdat$communality, 3) #Shows communalities
pcdat$loadings #Shows rotated component matrix
round(pcdat$scores[c(1:15),],4) #Shows factor scores
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
View(cmdat)
round(cmdat,4)
library("lattice")
library("FactoMineR")
library("psych")
library("nFactors")
data = Ingresantes[,c(2:10)]
wine <- read.csv("C:/Users/Mauca/Desktop/R/Data/wine.data", header=FALSE)
View(wine)
help("merge")
name(wine)
names(wine)
data = wine[,c(2:14)]
View(data)
cmdat=cor(data)
round(cmdat,4) #Correlation matrix up to 4 decimals
View(cmdat)
summary(data) #Some descriptives
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
print(KMO(cmdat), digits = 4)
#Number of factors to extract
ev=eigen(cmdat)
nS = nScree (x=ev$values)
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
#Extracting components
pcdat = principal(data, nfactors = 3, rotate ="varimax" , scores = TRUE)
names(pcdat)
round(pcdat$communality, 3) #Shows communalities
pcdat$loadings #Shows rotated component matrix
round(pcdat$scores[c(1:15),],4) #Shows factor scores
processed.cleveland <- read.csv("C:/Users/Mauca/Desktop/R/Data/processed.cleveland.data", header=FALSE)
View(processed.cleveland)
colnames(processed.cleveland)=c("age","sex","cp","trestbps","chol","fbs",
"restecg","thalach","exang","oldspeak","slope",
"ca","thal","num")
processed.cleveland
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 178)
print(KMO(cmdat), digits = 4)
#Number of factors to extract
ev=eigen(cmdat)
nS = nScree (x=ev$values)
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
library(haven)
Ingresantes <- read_sav("~/SPSS/Factorial/Ingresantes.sav")
View(Ingresantes)
library("lattice")
library("FactoMineR")
library("psych")
library("nFactors")
library("lattice")
library("FactoMineR")
library("psych")
library("nFactors")
data = Ingresantes[,c(2:10)]
View(data)
cmdat=cor(data)
round(cmdat,4) #Correlation matrix up to 4 decimals
round(cmdat,2) #Correlation matrix up to 4 decimals
round(cmdat,4) #Correlation matrix up to 4 decimals
summary(data) #Some descriptives
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
print(KMO(cmdat), digits = 4)
#Number of factors to extract
ev=eigen(cmdat)
View(ev)
nS = nScree (x=ev$values)
nS
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
#Extracting components
pcdat = principal(data, nfactors = 3, rotate ="varimax" , scores = TRUE)
names(pcdat)
round(pcdat$communality, 3) #Shows communalities
round(pcdat$communality, 7) #Shows communalities
round(pcdat$communality, 3) #Shows communalities
pcdat$loadings #Shows rotated component matrix
round(pcdat$scores[c(1:15),],4) #Shows factor scores
round(pcdat$scores[c(1:20),],4) #Shows factor scores
round(pcdat$scores[c(1:15),],4) #Shows factor scores
round(pcdat$scores[c(1:15),],2) #Shows factor scores
round(pcdat$scores[c(1:15),],4) #Shows factor scores
library("lattice")
library("FactoMineR")
library("psych")
library("nFactors"
library(haven)
Ingresantes <- read_sav("~/SPSS/Factorial/Ingresantes.sav")
View(Ingresantes)
library(haven)
Ingresantes <- read_sav("~/SPSS/Factorial/Ingresantes.sav")
View(Ingresantes)
library("lattice")
library("FactoMineR")
library("psych")
library("nFactors")
data = Ingresantes[,c(2:10)]
data = Ingresantes[,c(2:10)]
data
cmdat=cor(data)
cmdat
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
print(KMO(cmdat), digits = 4)
cmdat=cor(data)
View(cmdat)
round(cmdat,4) #Correlation matrix up to 4 decimals
help(cor)
round(cmdat,4) #Correlation matrix up to 4 decimals
summary(data) #Some descriptives
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
round(cmdat,4) #Correlation matrix up to 4 decimals
#Bartlett sphericity test and KMO
cortest.bartlett(cmdat, n = 541)
print(KMO(cmdat), digits = 4)
print(KMO(cmdat), digits = 3)
#Number of factors to extract
ev=eigen(cmdat)
nS = nScree (x=ev$values)
plotnScree(nS) #Plots Scree graph
nS$Analysis #Shows Eigenvalues and cumulative.
round(nS$Analysis,4) #Shows Eigenvalues and cumulative.
round(nS$Analysis[,1:3],4) #Shows Eigenvalues and cumulative.
round(nS$Analysis[,1:3],4)*100 #Shows Eigenvalues and cumulative.
round(nS$Analysis[,2:3],4)*100 #Shows Eigenvalues and cumulative.
nS$Analysis #Shows Eigenvalues and cumulative.
#Extracting components
pcdat = principal(data, nfactors = 3, rotate ="varimax" , scores = TRUE)
names(pcdat)
round(pcdat$communality, 3) #Shows communalities
round(pcdat$uniquenesses,3)
1-round(pcdat$communality, 3) #Shows communalities
pcdat$loadings #Shows rotated component matrix
round(pcdat$loadings,10) #Shows rotated component matrix
print(pcdat$loadings,10) #Shows rotated component matrix
pcdat$loadings #Shows rotated component matrix
round(pcdat$scores[c(1:15),],4) #Shows factor scores
round(pcdat$scores[c(1:15),],4) #Shows factor scores
round(pcdat$scores[c(1:15),],4) #Shows factor scores
round(pcdat$scores[c(1:15),],4) #Shows factor scores
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
library(readxl)
corresp1 <- read_excel("C:/Users/Mauca/Desktop/R/Data/corresp1.xlsx")
View(corresp1)
#Prepare data
datos<-as.matrix(corresp1[1:8,2:5],)
rownames(datos) <-as.matrix(corresp1[-9,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)#Row
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
#Independence test
chisq.test(tab)
#Correspondence analysis
catab=CA(tab)
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
fviz_ca_row(catab, repel = TRUE) #Row graph
fviz_ca_col(catab, reoel = TRUE) #Column graph
fviz_ca_biplot(catab, repel = TRUE) #Col&row graph
#Euclidean profile distances (with marginals)
rowprof=rbind(prop.table(tab,1),catab$call$marge.col)
colprof=cbind(prop.table(tab,2),catab$call$marge.row)
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(colprof)), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))

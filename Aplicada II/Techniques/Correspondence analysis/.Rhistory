cs <- read_excel("C:/Users/Mauca/Desktop/R/Data/cs.xlsx")
View(cs)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("psych")
library("ca")
#Prepare data
datos<-as.matrix(cs[,2:6],)
rownames(datos) <-as.matrix(cs[,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
#Independence test
chisq.test(tab)
#Correspondence analysis
catab=CA(tab)
catab
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
fviz_ca_row(catab, repel = TRUE) #Row graph
fviz_ca_col(catab, reoel = TRUE) #Column graph
fviz_ca_biplot(catab, repel = TRUE) #Col&row graph
catab
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
catab
catab$call$marge.row
library(readxl)
cs <- read_excel("C:/Users/Mauca/Desktop/R/Data/cs.xlsx")
View(cs)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
#Prepare data
datos<-as.matrix(cs[,2:6],)
rownames(datos) <-as.matrix(cs[,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
help(dit)
help(dist)
View(cs)
euc.dist = function(x1,x2) sqrt((x1-x2)^2)
euc.dist(cs,cs)
euc.dist(cs[,3],cs[,3])
euc.dist(cs[,3],cs[,4])
euc.dist = function(x1,x2) sqrt(sum((x1-x2)^2))
euc.dist(cs[,3],cs[,4])
install.packages(Flexibly)
install.packages("Flexibly")
library(haven)
Encuesta_LGBTI <- read_sav("~/SPSS/Correspondencias/Práctica calificada/Encuesta LGBTI.sav")
View(Encuesta_LGBTI)
#Prepare data
orient = factor(Encuesta_LGBTI$p113,
levels = c(1,2,3,4,5,6,7,9),
labels = c("Heterosexual","Gay","Lesbiana","Bisexual",
"Pansexual","Asexual","Otro","No especifica")
)
etn = factor(Encuesta_LGBTI$p136,
levels = c(1,2,3,4,5,6,7,8),
labels = c("Quechua","Aymara","Nativo o ind. amazonía",
"Otro pueblo originario","Negro/Mo/Zam/Mul/Afro",
"Blanco","Mestizo","otro")
)
tab = table(orient,etn)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
#Independence test
chisq.test(tab)
as.matrix(tab)
A=as.matrix(tab)
A
data.frame=as.matrix(tab)
jeje=as.matrix(tab)
rm(jeje)
rm(data.frame)
A = data.frame(tab)
View(A)
tab #Contingency table
colSums(tab)
A=rbind(tab,colSums(tab))
AcolSums(tab)
A
B=cbind(tab,rowSums(tab))
B
B=cbind(A,rowSums(tab))
A=rbind(tab,colSums(tab))
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
#Correspondence analysis
catab=CA(tab)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
#Correspondence analysis
catab=CA(tab)
catab
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
summary(catab) #Summary of correspondence analysis
catab$row$coord
help(catab)
help("CA")
#Correspondence analysis
catab=CA(tab, ncp=2)
catab
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
#Correspondence analysis
catab=CA(tab, ncp=2)
catab
summary(catab) #Summary of correspondence analysis
fviz_ca_biplot(catab, repel = TRUE) #Col&row graph
catab$row$coord
catab$col$coord
library("gmodels")
library("ggplot2")
library("vcd")
library("agricolae")
library("grid")
library("tidyverse")
# Lectura de datos
orient = factor(Encuesta_LGBTI$p113,
levels = c(1,2,3,4,5,6,7,9),
labels = c("Heterosexual","Gay","Lesbiana","Bisexual",
"Pansexual","Asexual","Otro","No especifica")
)
etn = factor(Encuesta_LGBTI$p136,
levels = c(1,2,3,4,5,6,7,8),
labels = c("Quechua","Aymara","Nativo o ind. amazonía",
"Otro pueblo originario","Negro/Mo/Zam/Mul/Afro",
"Blanco","Mestizo","otro")
)
tab= table(orient,etn)
ggplot(data = DMark, aes(x = Edad, y = ..count.., fill = Edad)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2","black")) +
labs(title = "Distribución de las edades de los clientes") +
theme_bw() +
theme(legend.position = "bottom")
# Usando ggplot2
library(ggplot2)
ggplot(data = tab, aes(x = Edad, y = ..count.., fill = Edad)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2","black")) +
labs(title = "Distribución de las edades de los clientes") +
theme_bw() +
theme(legend.position = "bottom")
ggplot(data = data.frame(tab), aes(x = Edad, y = ..count.., fill = Edad)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2","black")) +
labs(title = "Distribución de las edades de los clientes") +
theme_bw() +
theme(legend.position = "bottom")
tab
tabla1 =tab
#x/y(para cada valor de x, ypredictor de x)
#y/x()
CrossTable(x = DMark$Edad,y = DMark$Historial)
#------------------------------------------------------------------#
#  c) Distribución condicional                                     #
#------------------------------------------------------------------#
tabla2=prop.table(tab,margin=1)
tabla2
#graficas, para usar; de barras agrupadas al 100%,graficas de barras componentes al 100%, graficas de mosaico##
# Barras agrupadas
barplot(t(tabla2),col=2:4,beside = T,
xlab="Grupo Etario",
ylab="Proporción de Clientes",
main="Distribución del historial de compra según grupo etario")
tabla2
#graficas, para usar; de barras agrupadas al 100%,graficas de barras componentes al 100%, graficas de mosaico##
# Barras agrupadas
barplot(t(tabla2),col=2:4,beside = T,
xlab="Grupo étnico",
ylab="Proporción de Clientes",
main="Distribución del historial de compra según grupo etario")
tabla2
#graficas, para usar; de barras agrupadas al 100%,graficas de barras componentes al 100%, graficas de mosaico##
# Barras agrupadas
barplot(t(tabla2),col=2:4,beside = T,
xlab="Grupo étnico",
ylab="Proporción de Clientes",
main="Distribución del historial de compra según grupo etario")
#graficas, para usar; de barras agrupadas al 100%,graficas de barras componentes al 100%, graficas de mosaico##
# Barras agrupadas
barplot(t(tabla2),col=2:4,beside = T,
xlab="Grupo étnico",
ylab="Proporción de Clientes",
main="Distribución de orientación sexual")
#graficas, para usar; de barras agrupadas al 100%,graficas de barras componentes al 100%, graficas de mosaico##
# Barras agrupadas
barplot(t(tabla2),col=2:4,beside = T,
xlab="Orientación sexual",
ylab="Proporción de orientación sexual",
main="Distribución de orientación sexual")
#graficas, para usar; de barras agrupadas al 100%,graficas de barras componentes al 100%, graficas de mosaico##
# Barras agrupadas
barplot(t(tabla2),col=2:9,beside = T,
xlab="Orientación sexual",
ylab="Proporción de orientación sexual",
main="Distribución de orientación sexual")
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
#Prepare data
orient = factor(Encuesta_LGBTI$p113,
levels = c(1,2,3,4,5,6,7,9),
labels = c("Heterosexual","Gay","Lesbiana","Bisexual",
"Pansexual","Asexual","Otro","No especifica")
)
library(readxl)
cs <- read_excel("C:/Users/Mauca/Desktop/R/Data/cs.xlsx")
View(cs)
#Prepare data
datos<-as.matrix(cs[,2:6],)
rownames(datos) <-as.matrix(cs[,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
library("adespatial")
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
#Independence test
chisq.test(tab)
#Correspondence analysis
catab=CA(tab)
catab
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
fviz_ca_row(catab, repel = TRUE) #Row graph
fviz_ca_col(catab, reoel = TRUE) #Column graph
fviz_ca_biplot(catab, repel = TRUE) #Col&row graph
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
library("adespatial")
#Prepare data
datos<-as.matrix(cs[,2:6],)
rownames(datos) <-as.matrix(cs[,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),3) #Row profile
round(prop.table(tab,2),3) #Column profile
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
library(readxl)
corresp1 <- read_excel("C:/Users/Mauca/Desktop/R/Data/corresp1.xlsx")
View(corresp1)
library(readxl)
cs <- read_excel("C:/Users/Mauca/Desktop/R/Data/cs.xlsx")
View(cs)
#Prepare data
datos<-as.matrix(corresp1[,2:5],)
rownames(datos) <-as.matrix(cs[,1])
rownames(datos) <-as.matrix(corresp1[,1])
tab = as.table(datos)
tab #Contingency table
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
get_dist(as.matrix(prop.table(tab,1)
get_dist(as.matrix(prop.table(tab,1))
get_dist(as.matrix(prop.table(tab,1))
get_dist(as.matrix(prop.table(tab,1))
get_dist(as.matrix(prop.table(tab,1)))
get_dist(as.matrix(rbind(prop.table(tab,1),rowsum(tab))))
rbind(prop.table(tab,1),rowsum(tab))
help("rbind")
rowsum(tab)
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
#Prepare data
datos<-as.matrix(corresp1[,2:5],)
rownames(datos) <-as.matrix(corresp1[,1])
tab = as.table(datos)
tab #Contingency table
#Prepare data
datos<-as.matrix(corresp1[1:8,2:5],)
rownames(datos) <-as.matrix(corresp1[,1])
tab = as.table(datos)
tab #Contingency table
#Prepare data
datos<-as.matrix(corresp1[1:8,2:5],)
rownames(datos) <-as.matrix(corresp1[-9,1])
tab = as.table(datos)
tab #Contingency table
colSums(tab)
#Correspondence analysis
catab=CA(tab)
catab$call$marge.col
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(rbind(prop.table(tab,1)),catab$call$marge.col), method = "euclidean"),4)
catab$call$marge.col
#Euclidean profile distances
round(get_dist(as.matrix(rbind(prop.table(tab,1)),catab$call$marge.row), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(rbind(prop.table(tab,1)),catab$call$marge.row), method = "euclidean"),4)
as.matrix(rbind(prop.table(tab,1)),catab$call$marge.row)
catab$call$marge.col
catab$call$marge.row
as.matrix(rbind(prop.table(tab,1)),catab$call$marge.row)
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
rbind(prop.table(tab,1),catab$call$marge.row)
catab$call$marge.row
rbind(prop.table(tab,1),catab$call$marge.row)
catab$call$marge.row
rbind(prop.table(tab,1),catab$call$marge.col)
rowprof=rbind(prop.table(tab,1),catab$call$marge.col)
colprof=cbind(prop.table(tab,1),catab$call$marge.row)
colprof
rowprof
colnames(colprof[5])=c("Marginal")
names(colprof)
#Euclidean profile distances
round(get_dist(as.matrix(colprof), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
round(get_dist(as.matrix(t(colprof)), method = "euclidean"),4)
round(get_dist(as.matrix(t(colprof)), method = "euclidean"),4)
#Euclidean profile distances (with marginals)
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
colprof
colprof
rowprof
colprof
rowprof
as.matrix(rbind(prop.table(tab,1)),catab$call$marge.row)
#Euclidean profile distances (with marginals)
rowprof=rbind(prop.table(tab,1),catab$call$marge.col)
colprof=cbind(prop.table(tab,1),catab$call$marge.row)
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(colprof)), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
round(get_dist(as.matrix(t(colprof)), method = "euclidean"),4)
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
rowprof
colprof=cbind(prop.table(tab,2),catab$call$marge.row)
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
round(get_dist(as.matrix(t(colprof)), method = "euclidean"),4)
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
round(get_dist(as.matrix(rowprof), method = "euclidean"),4)
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
catab
#Correspondence analysis
catab=CA(tab)
summary(catab) #Summary of correspondence analysis
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
#Independence test
chisq.test(tab)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)#Row
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)#Col
#Independence test
chisq.test(tab)
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
#Independence test
chisq.test(tab)
#Correspondence analysis
catab=CA(tab)
summary(catab) #Summary of correspondence analysis
library(readxl)
corresp1 <- read_excel("C:/Users/Mauca/Desktop/R/Data/corresp1.xlsx")
View(corresp1)
library("lattice")
library("ggplot2")
library("factoextra")
library("FactoMineR")
library("psych")
library("ca")
library("ggplot2")
#Prepare data
datos<-as.matrix(corresp1[1:8,2:5],)
rownames(datos) <-as.matrix(corresp1[-9,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)#Row
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
#Independence test
chisq.test(tab)
#Correspondence analysis
catab=CA(tab)
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
fviz_ca_row(catab, repel = TRUE) #Row graph
fviz_ca_col(catab, reoel = TRUE) #Column graph
fviz_ca_biplot(catab, repel = TRUE) #Col&row graph
catab$row
library(readxl)
cs <- read_excel("C:/Users/Mauca/Desktop/R/Data/cs.xlsx")
View(cs)
#Prepare data
datos<-as.matrix(cs[,2:6],)
rownames(datos) <-as.matrix(cs[,1])
tab = as.table(datos)
tab #Contingency table
#Column and row profiles (conditionals)
round(prop.table(tab,1),4) #Row profile
round(prop.table(tab,2),4) #Column profile
#Euclidean profile distances
round(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"),4)#Row
fviz_dist(get_dist(as.matrix(prop.table(tab,1)), method = "euclidean"))
round(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"),4)
fviz_dist(get_dist(as.matrix(t(prop.table(tab,2))), method = "euclidean"))
#Independence test
chisq.test(tab)
#Correspondence analysis
catab=CA(tab)
summary(catab) #Summary of correspondence analysis
round(catab$eig,4) #Eigenvalues and cumulative
fviz_ca_row(catab, repel = TRUE) #Row graph
fviz_ca_col(catab, reoel = TRUE) #Column graph
fviz_ca_biplot(catab, repel = TRUE) #Col&row graph
catab$row
catab$row

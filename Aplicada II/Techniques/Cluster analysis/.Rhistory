library(cluster)
library(factoextra)
library(ggplot2)
library(DataExplorer)
library(funModeling)
library(corrplot)
library(readxl)
dataval <- read_excel("C:/Users/Mauca/Desktop/R/Data/dataval.xlsx")
View(dataval)
library(cluster)
library(factoextra)
library(ggplot2)
library(DataExplorer)
library(funModeling)
library(corrplot)
data = as.data.frame(dataval[,-1]) #Importar tus datos de excel
rownames(data) = dataval$pais #Asigna nombres a cada fila
data.e = scale(data) #¡Importante! Estandariza datos
summary #Resumen de descriptivos univariados
summary #Resumen de descriptivos univariados
summary(data) #Resumen de descriptivos univariados
plot_histogram(data) #Sin colores
plot_num(data) #Con colores
d = dist(data.e, method = "euclidean") ; round(as.matrix(d)[1:7,1:7],3) #Matriz de distancia
fviz_dist(get_dist(data.e , method = "euclidean"),
gradient = list(low ="black",mid ="grey",high="green")) #Visualizar matriz
corrplot(as.matrix(d),
is.corr = FALSE,
method = "color",
order = "hclust",
type = "upper") #Visualización triángulo
hres = hclust(d, method = "ward.D2") #Análisis cluster en sí
hres1 = hclust(d, method = "complete")
hres2 = hclust(d, method = "simple")
hres2 = hclust(d, method = "single")
hres3 = hclust(d, method = "average")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
rsmn = cbind(hres$height,hres$merge)
colnames(rsmn) = c("Altura","Merge1","Merge2") ; head(rsmn, n = 10)
fviz_dend(hres, k = 3, cex = 0.8, k_colors = c("#c39797","#42a7a4","#8b8378","#35354f"),
main = "Título por confirmar",
ylab = "Altura") +
geom_hline( color = "#078DE1", yintercept = 9, linetype = 2)
cor(d,cophenetic(hres)) #Número cercano a 1 entonces clasificación más exacta
fviz_cluster(hres1, data, repel = TRUE)
fviz_cluster(hres1$merge, data, repel = TRUE)
fviz_cluster(, data, repel = TRUE)
?fviz_cluster
fviz_cluster(list(data = data, cluster = hres), repel = TRUE)
fviz_cluster(list(data = data, cluster = hres$merge), repel = TRUE)
fviz_cluster(list(data = data, cluster = hres$height), repel = TRUE)
pt1 = cutree(hres1, 3)
pt = cutree(hres, 3)
pt1 = cutree(hres1, 3)
pt2 = cutree(hres2, 3)
pt3 = cutree(hres3, 3)
table(pt1)
pt1
table(pt2)
fviz_cluster(list(data = data, cluster = pt1), repel = TRUE)
fviz_cluster(list(data = data, cluster = pt), repel = TRUE)
fviz_dend(hres, k = 3, cex = 0.8, k_colors = c("#c39797","#42a7a4","#8b8378","#35354f"),
main = "Título por confirmar",
ylab = "Altura") +
geom_hline( color = "#078DE1", yintercept = 9, linetype = 2)
fviz_cluster(list(data = data, cluster = pt), repel = TRUE)
fviz_cluster(list(data = data, cluster = pt1), repel = TRUE)
fviz_cluster(list(data = data, cluster = pt2), repel = TRUE)
fviz_cluster(list(data = data, cluster = pt3), repel = TRUE)
km = kmeans(data,
centers = 3,    #Número clusters
iter.max = 100, #Iteraciones
nstart = 25)    #Puntos iniciales
clusplot(data, km$cluster, lines = 0)
fviz_cluster(km, data, repel = TRUE)
fviz_cluster(list(data = data, cluster = pt1), repel = TRUE)
fviz_cluster(km, data, repel = TRUE)
clusplot(data, km$cluster, lines = 0)
fviz_cluster(km, data, repel = TRUE)
fviz_dist(get_dist(data.e , method = "euclidean"),
gradient = list(low ="black",mid ="grey",high="green")) #Visualizar matriz
corrplot(as.matrix(d),
is.corr = FALSE,
method = "color",
order = "hclust",
type = "upper") #Visualización triángulo
hres = hclust(d, method = "ward.D2") #Análisis cluster en sí
hres1 = hclust(d, method = "complete")
hres2 = hclust(d, method = "single")
hres3 = hclust(d, method = "average")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
rsmn = cbind(hres$height,hres$merge)
colnames(rsmn) = c("Altura","Merge1","Merge2") ; head(rsmn, n = 10)
fviz_dend(hres, k = 3, cex = 0.8, k_colors = c("#c39797","#42a7a4","#8b8378","#35354f"),
main = "Título por confirmar",
ylab = "Altura") +
geom_hline( color = "#078DE1", yintercept = 9, linetype = 2)
fviz_dend(hres, k = 3, cex = 0.8, palette = "Blues",
main = "Título por confirmar",
ylab = "Altura") +
geom_hline( color = "#078DE1", yintercept = 9, linetype = 2)
library(readxl)
F1 <- read_excel("C:/Users/Mauca/Downloads/F1.xlsx")
View(F1)
data <- F1[,-1]
rownames(data) = F1$EMPRESA
data
rownames(data) = F1$EMPRESA
data
data.e = scale(data) #Estandarización de data
summary(data) #Resumen de descriptivos univariados
d = dist(data.e, method = "euclidean") #Matriz de distancias
fviz_dist(get_dist(data.e , method = "euclidean")) #Visual. matriz
library(cluster)
library(factoextra)
library(ggplot2)
library(DataExplorer)
library(funModeling)
library(corrplot)
d = dist(data.e, method = "euclidean") #Matriz de distancias
d
d?2
d^2
corrplot(as.matrix(d),
is.corr = FALSE,
method = "color",
order = "hclust",
type = "upper")   #Matriz de distancias
data <- F1[-c(23,33),-1]
data
rownames(data) = F1$EMPRESA
data.e = scale(data) #Estandarización de data
d = dist(data.e, method = "euclidean") #Matriz de distancias
d
View(data)
View(F1)
data <- F1[c(1:27),-1]
rownames(data) = F1$EMPRESA
data.e = scale(data) #Estandarización de data
View(data)
summary(data) #Resumen de descriptivos univariados
d = dist(data.e, method = "euclidean") #Matriz de distancias
hres = hclust(d, method = "ward.D2")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
rsmn = cbind(c(1:24),hres$merge,hres$height)
colnames(rsmn) = c("Paso","Merge1","Merge2","Altura") ; head(rsmn, n = 10)
hres = hclust(d^2, method = "ward.D2")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
rsmn = cbind(c(1:24),hres$merge,hres$height)
colnames(rsmn) = c("Paso","Merge1","Merge2","Altura") ; head(rsmn, n = 10)
fviz_dend(hres, k = 3, cex = 0.8, k_colors = c("red","orange","green"),
main = "Dendrograma - disponibilidad de servicios de salud por departamento del Perú en el año 2017",
ylab = "Altura") +
geom_hline( color = "#00000F", yintercept = 5, linetype = 2)
?fviz_dend
fviz_dend(hres, h = 9, cex = 0.8, k_colors = c("red","orange","green"),
main = "Dendrograma - disponibilidad de servicios de salud por departamento del Perú en el año 2017",
ylab = "Altura") +
geom_hline( color = "#00000F", yintercept = 5, linetype = 2)
hres = hclust(d^2, method = "ward.D")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
rsmn = cbind(c(1:24),hres$merge,hres$height)
colnames(rsmn) = c("Paso","Merge1","Merge2","Altura") ; head(rsmn, n = 10)
fviz_dend(hres, h = 9, cex = 0.8, k_colors = c("red","orange","green","blue"),
main = "Dendrograma - disponibilidad de servicios de salud por departamento del Perú en el año 2017",
ylab = "Altura") +
geom_hline( color = "#00000F", yintercept = 5, linetype = 2)
hres = hclust(d^2, method = "ward.D")
hres$height
?hcust
?hclust
hres = hclust(d^2, method = "ward.D2")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
library(readxl)
regfinal <- read_excel("C:/Users/Mauca/Desktop/R/Data/regfinal.xlsx")
View(regfinal)
summary(data)
View(data)
rm(list = ls())
library(readxl)
regfinal <- read_excel("C:/Users/Mauca/Desktop/R/Data/regfinal.xlsx")
View(regfinal)
data <- regfinal
summary(data)
ggplot(data, aes(Y)) +
geom_histogram(binwidth = 6, color = "black", fill = "green") + #Histogram
labs(title = "Histograma de partidas ganadas") +
xlab("Y (Número de partidas ganadas)") +
ylab("Frecuencia") +
theme_bw()
summary(data)
View(regfinal)
library(readxl)
regfinal <- read_excel("C:/Users/Mauca/Desktop/R/Data/regfinal.xlsx")
View(regfinal)
data <- regfinal
summary(data)
ggplot(data, aes(Y)) +
geom_histogram(binwidth = 6, color = "black", fill = "green") + #Histogram
labs(title = "Histograma de partidas ganadas") +
xlab("Y (Número de partidas ganadas)") +
ylab("Frecuencia") +
theme_bw()
lmod <- lm(Y ~ ., data) #Modelo lineal
summary(lmod) #Resumen del modelo
lmod$coefficients #Solo coeficientes
qf(0.95,3,3)
qf(0.95,5,94)
lmod <- lm(Y ~ X1 + X3, data) #Modelo lineal
summary(lmod)
plot(lmod)
View(data)
predict(lmod, data.frame(X1 = 14, X3 = 12), #intervalo de confianza
interval = "confidence",
level = 0.95)
predict(lmod, data.frame(X1 = 14, X3 = 12), #intervalo de confianza
interval = "prediction",
level = 0.95)
lmod <- lm(Y ~ ., data) #Modelo lineal sin intercepto
summary(lmod) #Resumen del modelo
library(cluster)
library(factoextra)
library(ggplot2)
library(DataExplorer)
library(funModeling)
library(corrplot)
library(readxl)
cdata <- read_excel("C:/Users/Mauca/Desktop/R/Data/cdata.xlsx")
View(cdata)
data <-  as.data.frame(cdata[1:3,-1])
data <-  as.data.frame(cdata[1:6,-1])
rownames(data) = c("Soy","Un","Tremendo","Gil","XD","KK")
data.e <- scale(data) #Estandarización de data
summary(data) #Resumen de descriptivos univariados
plot_histogram(data) #Histogramas
plot_num(data) # Histogramas a colores
d = dist(data.e, method = "euclidean") #Matriz de distancias
fviz_dist(get_dist(data.e , method = "euclidean")) #Visual. matriz
corrplot(as.matrix(d),
is.corr = FALSE,
method = "color",
order = "hclust",
type = "upper")   #Matriz de distancias
round(as.matrix(d),2)[1:6,1:6]
hres = hclust(d, method = "ward.D2")
hres$merge  #Paso donde se junta
hres$height #Altura ascendente
rsmn = cbind(c(1:24),hres$merge,hres$height)
colnames(rsmn) = c("Paso","Merge1","Merge2","Altura") ; head(rsmn, n = 10)
fviz_dend(hres, k = 3, cex = 0.8, k_colors = c("red","orange","green"),
main = "Dendrograma - disponibilidad de servicios de salud por departamento del Perú en el año 2017",
ylab = "Altura") +
geom_hline( color = "#00000F", yintercept = 5, linetype = 2)
library(ggplot2)
library(factoextra)
library(cluster)
library(tidyverse)
data = iris[,-5]
d = dist(data, method = "euclidean")
fviz_nbclust(data , kmeans , method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
km = kmeans(data,
centers = 3,
iter.max = 100,
nstart = 25)
km$centers
km$cluster
km$betweenss
km$withinss
km$size
fviz_cluster(km, data, ellipse.type = "convex") +
labs(title = "Iris flower cluster")
clusplot(data, km$cluster, main = "Iris flower cluster", plotchar = FALSE,
color = TRUE, lines = 0)
library(ggplot2)
library(factoextra)
library(cluster)
library(tidyverse)
data = iris[,-5]
d = dist(data, method = "euclidean")
fviz_nbclust(data , kmeans , method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
km = kmeans(data,
centers = 3,
iter.max = 100,
nstart = 25)
km$centers
km$cluster
km$betweenss
km$withinss
km$size
fviz_cluster(km, data, ellipse.type = "convex") +
labs(title = "Iris flower cluster")
data = iris[,-5]
d = dist(data, method = "euclidean")
fviz_nbclust(data , kmeans , method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
library(ggplot2)
library(factoextra)
library(cluster)
library(tidyverse)
data = iris[,-5]
d = dist(data, method = "euclidean")
fviz_nbclust(data , kmeans , method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
km = kmeans(data,
centers = 3,
iter.max = 100,
nstart = 25)
km$centers
km$cluster
km$betweenss
km$withinss
km$size
fviz_cluster(km, data, ellipse.type = "convex") +
labs(title = "Iris flower cluster")
clusplot(data, km$cluster, main = "Iris flower cluster", plotchar = FALSE,
color = TRUE, lines = 0)

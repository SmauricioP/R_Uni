dim(sg_krk_id)
solve(t(X) %*% sg_krk_id %*% X)
rep(Kmenta$consump,2)
y <- rep(Kmenta$consump)
y <- rep(Kmenta$consump,2)
solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
fit_mc3e
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
beta_mc3e
?dimnames
dimnames(beta_mc3e)
dimnames(beta_mc3e)
dimnames(beta_mc3e) <- list("XD",NULL)
dimnames(beta_mc3e) <- list(NULL,"XD")
beta_mc3e
dimnames(coef(fit_mc3e))
names(coef(fit_mc3e))
dimnames(beta_mc3e) <- list(NULL, names(coef(fit_mc3e)))
dimnames(beta_mc3e) <- list( names(coef(fit_mc3e)), NULL)
beta_mc3e
coef(fit_mc3e)
coef(fit_mc2e)
?cov
systemfit(list(eq1 = consumption ~ price_fit + income,
eq2 = consumption ~ price_fit + farmPrice + trend),
method = "SUR", data = Kmenta)
systemfit(list(eq1 = consump ~ price_fit + income,
eq2 = consump ~ price_fit + farmPrice + trend),
method = "SUR", data = Kmenta)
coef(fit_mc3e)
beta_mc3e
beta_mc3e
coef(fit_mc3e)
systemfit(list(eq1 = consump ~ price_fit + income,
eq2 = consump ~ price_fit + farmPrice + trend),
method = "SUR", data = Kmenta)
beta_mc3e
?systemfit
fit_mc3e$residCov
sigma
sigma <- fit_mc3e$residCov
sg_krk_id <- kronecker(solve(cov_mat), diag(20))
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- rep(Kmenta$consump,2)
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
coef(fit_mc3e)
beta_mc3e
sigma <- fit_mc3e$residCov
sg_krk_id <- kronecker(solve(cov_mat), diag(20))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
beta_mc3e
sigma <- cov(cbind(res1,res2))
sg_krk_id <- kronecker(solve(cov_mat), diag(20))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
beta_mc3e
X
y
X
dim(y)
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id) %*% y
beta_mc3e
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
systemfit(list(eq1 = consump ~ price_fit + income,
eq2 = consump ~ price_fit + farmPrice + trend),
method = "SUR", data = Kmenta)
fit_mc3e$x*
fit_mc3e$x
fit_mc3e$iter
fit_mc3e$method
fit_mc3e$call
X
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
beta_mc3e
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
fit_mc3e
coef(fit_mc2e))
coef(fit_mc2e)
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)))
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
dimnames(beta_mc3e) <- list(NULL,names(coef(fit_mc2e)))
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
dimnames(beta_mc3e) <- list("",names(coef(fit_mc2e)))
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
dimnames(beta_mc3e) <- list(" ",names(coef(fit_mc2e)))
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
dimnames(beta_mc3e) <- list(c(""),names(coef(fit_mc2e)))
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
beta_mc3e
dimnames(beta_mc3e) <- list(c("a"),names(coef(fit_mc2e)))
dimnames(beta_mc3e) <- list("c",names(coef(fit_mc2e)))
dimnames(beta_mc3e)
beta_mc3e
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
coef(fit_mc3e) - t(beta_mc3e)
t(coef(fit_mc3e))
t(coef(fit_mc3e))
coef(fit_mc3e)
beta_mc3e
t(beta_mc3e)
setwd("Econ. interm/")
library(ivreg)     # Regresión por MC2E
library(tidyverse) # Siempre es bueno tenerlo
library(haven)     # Abrir archivos stata
library(systemfit) # Estimación MES
library(nlme)      # Estimación por MCG
data("Kmenta")
dmd <- consump ~ price + income             # Ecuación de demanda
oft  <- consump ~ price + farmPrice + trend # Ecuación de oferta
inst <- ~ income + farmPrice + trend # Las instrumentales o exógenas
system <- list(Demanda = dmd, Oferta = oft) # Lista con el sistema
red1 <- lm(consump ~ income + farmPrice + trend, Kmenta)
red2 <- lm(price ~ income + farmPrice + trend, Kmenta)
Kmenta[,"cons_fit"] = as.numeric(red1$fitted.values)
Kmenta[,"price_fit"] = as.numeric(red2$fitted.values)
fit1_mc2e <- lm(consump ~ price_fit + income, Kmenta)
fit2_mc2e <- lm(consump ~ price_fit + farmPrice + trend, Kmenta)
fit_mc2e <- systemfit(system, method = "2SLS", inst = inst, data = Kmenta)
res1 <- as.numeric(fit1_mc2e$residuals)
res2 <- as.numeric(fit2_mc2e$residuals)
sigma <- cov(cbind(res1,res2))
sg_krk_id <- kronecker(solve(cov_mat), diag(20))
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
res1 <- as.numeric(fit1_mc2e$residuals)
res2 <- as.numeric(fit2_mc2e$residuals)
sigma <- cov(cbind(res1,res2))
sg_krk_id <- kronecker(solve(cov_mat), diag(20))
sg_krk_id <- kronecker(solve(sgima), diag(20))
sg_krk_id <- kronecker(solve(sigma), diag(20))
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
fit_mc3e$residCovEst
fit_mc3e$residCov
zero1 <- matrix(1,20,4)
zero1 <- matrix(1,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% t(X) %*% sg_krk_id %*% y
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
y
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id %*% y)
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
fit_mc3e$coefCov
fit_mc3e$residCovEst
sigma
sigma <- fit_mc3e$residCovEst
sg_krk_id <- kronecker(solve(sigma), diag(20))
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id %*% y)
beta_mc3e
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
fit_mc3e$residCovEst
?systemfit
cov(cbind(resid1,resid2))
cov(cbind(res1,res2))
cov(cbind(res1,res2),method = "spearman")
cov(cbind(res1,res2),method = "kendall")
cov(cbind(res1,res2),method = "pearson")
?vcov
vcov(cbind(res1,res2))
vcov(system)
vcov(list(c(res1,res2)))
fit_mc3e$residCovEst
coef(fit_mc3e)
t(beta_mc3e)
?systemfit
cov(c(res1,res2))
cov(cbind(res1,res2))
fit_mc3e$residCovEst
fit_mc3e$residCovEst
cov(cbind(as.numeric(fit1_mc2e$residuals),as.numeric(fit1_mc2e$residuals)))
fit_mc3e$residCovEst
cov(cbind(as.numeric(fit1_mc2e$residuals),as.numeric(fit1_mc2e$residuals)))
cov(cbind(as.numeric(fit1_mc2e$residuals),as.numeric(fit2_mc2e$residuals)))
cov(cbind(as.numeric(red1$residuals),as.numeric(red2$residuals)))
sum(res1^2)
sum(res1^2)/(nrow(data))
sum(res1^2)/(nrow(Kmenta))
fit_mc3e$residCovEst
sum(res1^2)/(nrow(Kmenta))
sum(res1^2)/(nrow(Kmenta)-2)
sum(res1^2)/(nrow(Kmenta)-1)
sum(res1*res2)/(nrow(Kmenta)-1)
sum(res1*res2)/(nrow(Kmenta))
systemfit(list(dm = consump ~ price_fit + income,
of = consump ~ price_fit + farmPrice + trend),
method = "3SLS", inst = inst, data = Kmenta)
fit_mc3e
coef(fit_mc3e)
t(beta_mc3e)
systemfit(list(dm = consump ~ price_fit + income,
of = consump ~ price_fit + farmPrice + trend),
method = "3SLS", inst = inst, data = Kmenta)
sigma <- cov(cbind(res1,res2))
sigma
sigma <- cov(cbind(res1,res2))
sigma
sg_krk_id <- kronecker(solve(sigma), diag(20))
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id %*% y)
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
systemfit(list(dm = consump ~ price_fit + income,
of = consump ~ price_fit + farmPrice + trend),
method = "3SLS", inst = inst, data = Kmenta)
a <- systemfit(list(dm = consump ~ price_fit + income,
of = consump ~ price_fit + farmPrice + trend),
method = "3SLS", inst = inst, data = Kmenta)
a$residCovEst
a$residCov
a$residCov
a$residCovEst
fit_mc3e$residCovEst
fit_mc2e$residCov
fit_mc3e$residCovEst
fit_mc2e$residCov
sigma <- fit_mc2e$residCov # La matriz de covarianza de las dos etapas.
sg_krk_id <- kronecker(solve(sigma), diag(20))
X1 <- model.matrix(~ price_fit + income, Kmenta)
X2 <- model.matrix(~ price_fit + farmPrice + trend, Kmenta)
zero1 <- matrix(0,20,4)
zero2 <- matrix(0,20,3)
X <- rbind(matrix(c(X1,zero1),20,7),matrix(c(zero2,X2),20,7))
y <- matrix(rep(Kmenta$consump,2))
beta_mc3e <- solve(t(X) %*% sg_krk_id %*% X) %*% (t(X) %*% sg_krk_id %*% y)
dimnames(beta_mc3e) <- list(names(coef(fit_mc2e)),"")
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
coef(fit_mc3e)
t(beta_mc3e)
t(beta_mc3e)
fit_mc3e <- systemfit(system, method = "3SLS", inst = inst, data = Kmenta)
t(beta_mc3e)
read_csv("data/klein2.csv")
rm(list = ls())
data <- read_csv("data/klein2.csv")
data
rm(list = ls())
setwd("Econ. interm/")
library(haven)      # Abrir archivos con extensión de Stata
library(systemfit)  # Estimación de ecuaciones simultáneas
read_stata("data/ofdem.dta")
data <- read_stata("data/ofdem.dta")
data
Of <- lm(q ~ pchlag, data)
Of
of <- lm(q ~ pchlag, data)
rm(list = c("Of"))
dm <- lm(p ~ q + i, data)
of <- lm(q ~ pchlag, data)
dm <- lm(p ~ q + i, data)
dm
of
of_res <- of$residuals
dm_res <- dm$residuals
cov_sys1 <- cov(list(Oferta = of_res, Demanda = dm_res))
list(Oferta = of_res, Demanda = dm_res)
cov_sys1 <- cov(list(Oferta = of_res, Demanda = dm_res))
cov_sys1 <- cov(cbind(Oferta = of_res, Demanda = dm_res))
cov_sys1
(cov_sys1 <- cov(cbind(Oferta = of_res, Demanda = dm_res)))
cov_sys1 <- cov(cbind(Oferta = of_res, Demanda = dm_res))
cor_sys1 <- cor(cbind(Oferta = of_res, Demanda = dm_res)) # Matriz corr.
cor_sys1
lm
ml
sta
stat
ml_stat <- 0
ml_stat <- 0
for (i in 1:2) {
for (j in 1:2) {
if (i < 2) {
ml_stat <- ml_stat + cor_sys1[i,j]^2
}
}
}
cor_sys1
0.349901^2
ml_stat <- 0
for (i in 1:2) {
for (j in 1:2) {
if (i < 2) {
ml_stat <- ml_stat + cor_sys1[i,j]^2
}
}
}
cor_sys1
ml_stat <- 0
for (i in 1:2) {
for (j in 1:2) {
if (i < j) {
ml_stat <- ml_stat + cor_sys1[i,j]^2
}
}
}
ml_stat <- nrow(data)
nrow(data)
ml_stat <- nrow(data)*ml_stat
ml_stat <- nrow(data)*ml_stat
ml_stat <- 0
for (i in 1:2) {
for (j in 1:2) {
if (i < j) {
ml_stat <- ml_stat + cor_sys1[i,j]^2
}
}
}
ml_stat <- nrow(data)*ml_stat
for (i in 1:2) {
for (j in 1:2) {
if (i == 1 & j == 1) {
ml_stat <- 0
}
if (i < j) {
ml_stat <- ml_stat + cor_sys1[i,j]^2
}
if (i == 2 & j == 2) {
ml_stat <- nrow(data)*ml_stat
}
}
}
for (i in 1:2) {
for (j in 1:2) {
if (i == 1 & j == 1) {
ml_stat <- 0
}
if (i < j) {
ml_stat <- ml_stat + cor_sys1[i,j]^2
}
if (i == 2 & j == 2) {
ml_stat <- nrow(data)*ml_stat
}
}
}
p_val <- qchisq(3)
p_val <- qchisq(3,1)
?pchisq
p_val <- pchisq(ml_stat,1)
p_val
p_val <- pchisq(ml_stat,1, lower.tail = FALSE)
p_val
p_val <- pchisq(ml_stat,1, lower.tail = FALSE); p_val
que se concluye
# que es probable que la matriz de varianza-covarianza sea diagonal. Así, solo
# basta utilizar MCO para estimar las ecuaciones estructurales.
# Se observa que la hipótesis nula no se puede rechazar, por lo que se concluye
# que es probable que la matriz de varianza-covarianza sea diagonal. Así, solo
# basta utilizar MCO para estimar las ecuaciones estructurales.
system_fit
?systemfir
?systemfit
system
eq_sys   <- list(Oferta = ofeq, Demanda = dmeq)
ofeq <- q ~ pchlag
dmeq <- p ~ q + i
var_inst <- ~ i + pchlag
eq_sys   <- list(Oferta = ofeq, Demanda = dmeq)
system_fit <- systemfit(eq_sys, method = "OLS")
ofeq <- q ~ pchlag
dmeq <- p ~ q + i
eq_sys   <- list(Oferta = ofeq, Demanda = dmeq)
system_fit <- systemfit(eq_sys, method = "OLS")
system_fit <- systemfit(eq_sys, method = "OLS", data = data)
coef(of)
coef(dm)
coef(system_fit)
cbind(coef(of),coef(dm))
coef(of)
coef(dm)
rbind(coef(of),coef(dm))
cbind(coef(of),coef(dm))
rbind(coef(of),coef(dm))
a <- coef(of)
a
t(a)
cbind(t(coef(of)),t(coef(dm)))
rbind(cbind(t(coef(of)),t(coef(dm))),coef(system_fit))
results <- rbind(cbind(t(coef(of)),t(coef(dm))),coef(system_fit))
dimnames(results)
dimnames(results) <- list(c("MCO c/u","MCO"), c("Intercepto - Oferta",
"pchlag - Oferta",
"Intercepto - Demanda",
"q - Demanda",
"i - Demanda"))
results
dimnames(results) <- list(c("MCO c/u","MCO"), c("Intr_Oferta",
"pchlag_Oferta",
"Intr_Demanda",
"q_Demanda",
"i_Demanda"))
results
dimnames(results) <- list(c("MCO 1","MCO 2"), c("Intr_Oferta",
"pchlag_Oferta",
"Intr_Demanda",
"q_Demanda",
"i_Demanda"))
results
# Resultados finales de la estimación por MCO:
results
results[1]
results[1,1]
results[1,]
results[1,1]
results[1,2]
results[1,2]*results[1,4]
results[1,4]
results[1,2]*results[1,4]
mult
mult <- results[1,2]*results[1,4]
cat("AA")
if (abs(results[1,2]*results[1,4]) < 1) {
cat("XD")
} else{
cat("AA")
}
cat("Asumiendo 'i' constante, el precio converge.")
if (abs(results[1,2]*results[1,4]) < 1) {
cat('Asumiendo "i" constante, el precio converge.')
} else{
cat("AA")
}
if (abs(results[1,2]*results[1,4]) < 1) {
cat('Asumiendo "i" constante, el modelo converge.')
} else{
cat('El modelo no converge.')
}
if (abs(results[1,2]*results[1,4]) < 1) {
cat('Asumiendo "i" constante, el modelo converge.')
} else{
cat('El modelo no converge.')
}
